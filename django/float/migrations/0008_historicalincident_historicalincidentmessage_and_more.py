# Generated by Django 4.1.3 on 2022-12-02 13:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('float', '0007_rename_treatment_provided_emergencymessage_treatment_provided_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIncident',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('last_updated_timestamp', models.DateTimeField(blank=True, editable=False)),
                ('event_occurance_timestamp', models.DateTimeField(blank=True, editable=False, help_text='Time of the incident events occuring', null=True)),
                ('reported_location', models.CharField(blank=True, help_text='What is the reported location of the incident?', max_length=256)),
                ('cause_of_injury', models.TextField(help_text='What was the cause of the injury?', null=True)),
                ('nature_of_injury', models.TextField(help_text='What is the nature of the injury?', null=True)),
                ('effects_of_injury', models.TextField(help_text='What are the signs/symptoms of the injury, other observations?', null=True)),
                ('treatment_provided', models.TextField(help_text='What treatment has been provided to the injury at this', null=True)),
                ('incident_message_type', models.CharField(choices=[('C', 'Child Safety'), ('E', 'Environmental'), ('M', 'Medical'), ('O', 'Other'), ('S', 'Security')], default='M', help_text='Select the nature of the incident.', max_length=1, null=True)),
                ('Has_this_been_escalated', models.BooleanField(default=False, help_text='Select if this incident has been delegated to another authority, as specificed below:')),
                ('escalated_to', models.CharField(help_text='Specify a 000 department, company, custodian, etc.', max_length=160, null=True)),
                ('incident_action', models.TextField(help_text='Briefly explain what has been done to address the incident situation. Provide as much detail as necessary.', null=True)),
                ('Has_this_been_controlled', models.BooleanField(default=False, help_text='Select if this incident has been controlled but has yet to be resolved.')),
                ('Has_this_been_resolved', models.BooleanField(default=False, help_text='Select if this incident has been resolved and no further action is required.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical incident',
                'verbose_name_plural': 'historical incidents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIncidentMessage',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('last_updated_timestamp', models.DateTimeField(blank=True, editable=False, null=True)),
                ('message_entry_timestamp', models.DateTimeField(null=True)),
                ('message_info', models.TextField(blank=True, help_text='Message details.', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(blank=True, db_constraint=False, help_text='Message was received by this Operator.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='float.operator')),
                ('sender', models.ForeignKey(blank=True, db_constraint=False, help_text='Message was sent by this Operator.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='float.operator')),
            ],
            options={
                'verbose_name': 'historical incident message',
                'verbose_name_plural': 'historical incident messages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_updated_timestamp', models.DateTimeField(auto_now=True)),
                ('event_occurance_timestamp', models.DateTimeField(auto_now_add=True, help_text='Time of the incident events occuring', null=True)),
                ('reported_location', models.CharField(blank=True, help_text='What is the reported location of the incident?', max_length=256)),
                ('cause_of_injury', models.TextField(help_text='What was the cause of the injury?', null=True)),
                ('nature_of_injury', models.TextField(help_text='What is the nature of the injury?', null=True)),
                ('effects_of_injury', models.TextField(help_text='What are the signs/symptoms of the injury, other observations?', null=True)),
                ('treatment_provided', models.TextField(help_text='What treatment has been provided to the injury at this', null=True)),
                ('incident_message_type', models.CharField(choices=[('C', 'Child Safety'), ('E', 'Environmental'), ('M', 'Medical'), ('O', 'Other'), ('S', 'Security')], default='M', help_text='Select the nature of the incident.', max_length=1, null=True)),
                ('Has_this_been_escalated', models.BooleanField(default=False, help_text='Select if this incident has been delegated to another authority, as specificed below:')),
                ('escalated_to', models.CharField(help_text='Specify a 000 department, company, custodian, etc.', max_length=160, null=True)),
                ('incident_action', models.TextField(help_text='Briefly explain what has been done to address the incident situation. Provide as much detail as necessary.', null=True)),
                ('Has_this_been_controlled', models.BooleanField(default=False, help_text='Select if this incident has been controlled but has yet to be resolved.')),
                ('Has_this_been_resolved', models.BooleanField(default=False, help_text='Select if this incident has been resolved and no further action is required.')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentMessage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_updated_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('message_entry_timestamp', models.DateTimeField(null=True)),
                ('message_info', models.TextField(blank=True, help_text='Message details.', null=True)),
                ('recipient', models.ForeignKey(blank=True, help_text='Message was received by this Operator.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_incident_recipient', to='float.operator')),
                ('sender', models.ForeignKey(blank=True, help_text='Message was sent by this Operator.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_incidentmessage_sender', to='float.operator')),
            ],
        ),
        migrations.RenameModel(
            old_name='HistoricalEmergencyPatient',
            new_name='HistoricalIncidentPatient',
        ),
        migrations.RemoveField(
            model_name='historicalemergencymessage',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalemergencymessage',
            name='patient_ref',
        ),
        migrations.RemoveField(
            model_name='historicalemergencymessage',
            name='recipient',
        ),
        migrations.RemoveField(
            model_name='historicalemergencymessage',
            name='sender',
        ),
        migrations.AlterModelOptions(
            name='historicalincidentpatient',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical incident patient', 'verbose_name_plural': 'historical incident patients'},
        ),
        migrations.RenameModel(
            old_name='EmergencyPatient',
            new_name='IncidentPatient',
        ),
        migrations.DeleteModel(
            name='EmergencyMessage',
        ),
        migrations.DeleteModel(
            name='HistoricalEmergencyMessage',
        ),
        migrations.AddField(
            model_name='incident',
            name='patient_ref',
            field=models.ForeignKey(blank=True, help_text='Create a new patient or select an existing patient to allocate a Patient ID (even if details of patient are not known at the time of the message)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_patient_ref', to='float.incidentpatient'),
        ),
        migrations.AddField(
            model_name='historicalincident',
            name='patient_ref',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Create a new patient or select an existing patient to allocate a Patient ID (even if details of patient are not known at the time of the message)', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='float.incidentpatient'),
        ),
    ]
